name: Django CI

on:
  push:
    branches: [ "feature/curso" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

  docker-build:
    runs-on: self-hosted
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push Docker image
      run: |
        docker build -t grimorio11/nginx-helm:${{ github.sha }} .
        docker push grimorio11/nginx-helm:${{ github.sha }}
    # - name: Build Docker image
    #   run: |
    #     kubectl get nodes
    - name: Install Helm
      uses: azure/setup-helm@v4

    - name: Deploy to Kubernetes using Helm
      env:
        KUBECONFIG: ${{ secret.KUBECONFIG-K0S }}
      run: |
       pwd && \
       cd /home/runner2/my-app && \
       helm upgrade --install my-app . \
       --set image.repository=grimorio11/nginx-helm \
       --set image.tag=latest \
       --namespace default
          
    # - name: Run Docker container
    #   run: |
    #     docker run -d -p 8000:8000 my-django-app

  
